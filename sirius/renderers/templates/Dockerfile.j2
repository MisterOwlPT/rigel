# This file was generated by Sirius.
############################################################################

# Use an intermediate stage to clone external repositories without
# compromising the security of any private SSH key.
FROM ros:{{ dockerfile.distro }} as intermediate

RUN apt clean && apt update && apt install -y \
    git \
    python-rosinstall \
    python-vcstool \
    ssh

{% if dockerfile.ssh is defined and dockerfile.ssh|length > 0 -%}
# Add SSH keys and set their permissions.
RUN mkdir -p /root/.ssh/
{%- for key in dockerfile.ssh %}
ARG {{ key.value }}
{%- endfor %}
{%- for key in dockerfile.ssh %}
RUN echo "${{ key.value }}" > /root/.ssh/{{ key.value }} && chmod 600 /root/.ssh/{{ key.value }}
{%- endfor %}

# Copy SSH configuration file and set its permissions.
COPY .sirius_config/config /root/.ssh/config
RUN chmod 600 /root/.ssh/config

# Ensure added SSH keys are accepted.
RUN touch /root/.ssh/known_hosts
{%- for key in dockerfile.ssh %}
RUN ssh-keyscan {{ key.hostname }} >> /root/.ssh/known_hosts
{%- endfor %}
{%- endif %}

# Copy .rosinstall files
{%- for file in dockerfile.rosinstall %}
COPY ./{{ file}} {{ file }}
{%- endfor %}

# Clone repositories.
RUN mkdir -p /ros_workspace/src && cd /ros_workspace/src \ 
    && source /opt/ros/{{ dockerfile.distro }}/setup.bash \
{%- for rosinstall in dockerfile.rosinstall %}
    && vcs import src < {{ rosinstall}} \
{%- endfor %}
    && echo

############################################################################

FROM ros:{{ dockerfile.distro }}

{% if dockerfile.env is defined and dockerfile.env|length > 0 -%}
# Set required environment variables.
{%- for env in dockerfile.env %}
ENV {{ env.name }} {{ env.value }}
{%- endfor %}
{%- endif %}

# Create ROS workspace folder
RUN mkdir -p ~/ros_workspace/src

{% if dockerfile.rosinstall is defined and dockerfile.rosinstall|length > 0 -%}
# Copy dependencies from intermediate stage.
COPY --from=intermediate /ros_workspace/src ~/ros_workspace/src/
{%- endif %}

# Copy this repository into the ROS workspace.
COPY . /ros_workspace/src/{{ dockerfile.package }}

# Copy bringup script.
COPY .sirius_config/entrypoint.sh ~/entrypoint.sh

# Install dependencies.
RUN apt clean && apt update && apt install -y \
    devilspie \
    lsb \
    {% if dockerfile.compiler == 'colcon' -%}
        python3-colcon-common-extensions \
    {% endif -%}
    ssh \
    xfce4-terminal

# Compile ROS workspace.
RUN cd ~/ros_workspace \
    && sudo rosdep fix-permissions \
    && rosdep update \
    && rosdep install --rosdistro {{ dockerfile.distro }} --from-paths src --ignore-src -r -y \
    {% if dockerfile.compiler == 'catkin_make' -%}
        && catkin_make
    {% elif dockerfile.compiler == 'colcon' -%}
        && colcon build
    {%- endif %}

# Launch ROS application.
CMD {{ dockerfile.cmd }}
ENTRYPOINT [ "~/entrypoint.sh" ]
