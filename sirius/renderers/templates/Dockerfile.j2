# This file was generated by Sirius.
############################################################################

# Use an intermediate stage to clone external repositories without
# compromising the security of any private SSH key.
FROM ros:{{ dockerfile.distro }} as intermediate

RUN apt clean && apt update && apt install -y \
    git \
    python-rosinstall \
    python-vcstool \
    ssh

{% if dockerfile.ssh is defined and dockerfile.ssh|length > 0 -%}
# Add SSH keys and set their permissions.
RUN mkdir -p /root/.ssh/
{% for key in dockerfile.ssh -%}
{%- if key.file == False -%}
ARG {{ key.value }}
{%- endif %}
{%- endfor %}
{%- for key in dockerfile.ssh %}
{% if key.file -%}
COPY {{ key.value }} /root/.ssh/{{ key.value }}
{%- else -%}
RUN echo "${{ key.value }}" > /root/.ssh/{{ key.value }} && chmod 600 /root/.ssh/{{ key.value }}
{%- endif %}
{%- endfor %}

# Copy SSH configuration file and set its permissions.
COPY .sirius_config/config /root/.ssh/config
RUN chmod 600 /root/.ssh/config
{%- endif %}

# Ensure hosts are accepted.
RUN touch /root/.ssh/known_hosts
{%- if dockerfile.ssh is defined and dockerfile.ssh|length > 0 -%}
{%- for key in dockerfile.ssh %}
RUN ssh-keyscan {{ key.hostname }} >> /root/.ssh/known_hosts
{%- endfor %}
{%- endif %}
{%- if dockerfile.hostname is defined and dockerfile.hostname|length > 0 -%}
{%- for hostname in dockerfile.hostname %}
RUN ssh-keyscan {{ hostname }} >> /root/.ssh/known_hosts
{%- endfor %}
{%- endif %}

RUN mkdir -p /ros_workspace/src

{% if dockerfile.rosinstall is defined and dockerfile.rosinstall|length > 0 -%}
# Copy .rosinstall files
{%- for file in dockerfile.rosinstall %}
COPY {{ file}} /ros_workspace/src/{{ file }}
{%- endfor %}
{%- endif %}

# Clone repositories.
RUN cd /ros_workspace \ 
    && /bin/bash -c "source /opt/ros/{{ dockerfile.distro }}/setup.bash \
{%- for file in dockerfile.rosinstall %}
    && vcs import src < src/{{ file }} \
{%- endfor %}
    " && echo

############################################################################

FROM ros:{{ dockerfile.distro }}

{% if dockerfile.env is defined and dockerfile.env|length > 0 -%}
# Set required environment variables.
{% for env in dockerfile.env -%}
ENV {{ env.name }} {{ env.value }}
{% endfor %}
{% endif -%}

# Install dependencies.
RUN sudo apt clean && sudo apt update && sudo apt install -y \
    {% if dockerfile.apt is defined and dockerfile.apt|length > 0 -%}
    {% for package in dockerfile.apt -%}
        {{ package }} \
    {% endfor -%}
    {% endif -%}
    devilspie \
    lsb \
    {% if dockerfile.compiler == 'colcon' -%}
        python3-colcon-common-extensions \
    {% endif -%}
    ssh \
    xfce4-terminal

{% if dockerfile.run is defined and dockerfile.run|length > 0 -%}
# Execute additional commands.
{% for cmd in dockerfile.run -%}
RUN {{ cmd }}
{% endfor -%}
{%- endif %}

ARG USERNAME=robomaker
RUN groupadd $USERNAME
RUN useradd -ms /bin/bash -g $USERNAME $USERNAME
RUN sh -c 'echo "$USERNAME ALL=(root) NOPASSWD:ALL" >> /etc/sudoers'
USER $USERNAME

# Create ROS workspace folder
RUN mkdir -p /home/robomaker/ros_workspace/src

{% if dockerfile.rosinstall is defined and dockerfile.rosinstall|length > 0 -%}
# Copy dependencies from intermediate stage.
COPY --from=intermediate /ros_workspace/src /home/robomaker/ros_workspace/src/

# Give workspace permissions to user
RUN sh -c 'sudo chmod -R +x /home/robomaker/ros_workspace'
RUN sh -c 'sudo chown -R robomaker:robomaker /home/robomaker/ros_workspace'
{%- endif %}

# Copy this repository into the ROS workspace.
COPY . /home/robomaker/ros_workspace/src/{{ dockerfile.package }}

# Copy bringup script.
COPY .sirius_config/entrypoint.sh /home/robomaker/robot-entrypoint.sh

# Compile ROS workspace.
RUN /bin/bash -c "source /opt/ros/{{ dockerfile.distro }}/setup.bash \ 
    && cd /home/robomaker/ros_workspace \
    && sudo rosdep fix-permissions \
    && rosdep update \
    && rosdep install --rosdistro {{ dockerfile.distro }} --from-paths src --ignore-src -r -y \
    {% if dockerfile.compiler == 'catkin_make' -%}
        && catkin_make"
    {% elif dockerfile.compiler == 'colcon' -%}
        && colcon build"
    {%- endif %}

# Give permissions to user
RUN sh -c 'sudo chmod +x /home/robomaker/robot-entrypoint.sh'
RUN sh -c 'sudo chown robomaker:robomaker /home/robomaker/robot-entrypoint.sh'

# Launch ROS application.
CMD {{ dockerfile.command }}
ENTRYPOINT [ "/home/robomaker/robot-entrypoint.sh" ]
